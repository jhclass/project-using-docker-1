services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: myapp:latest
    ports:
      - "${DEV_PORT}:${DEV_PORT}"
      - "5555:5555"
    volumes:
      - .:/usr/src/myapp
      - /usr/src/myapp/node_modules
    environment:
      DATABASE_URL: ${DATABASE_URL}
      KAFKA_BROKER: kafka:${KAFKA_PORT}
      LD_LIBRARY_PATH: "/usr/lib/x86_64-linux-gnu"
      PRISMA_CLI_QUERY_ENGINE_TYPE: "binary"
    env_file:
      - .env # .env 파일의 모든 변수를 컨테이너에 전달
    depends_on:
      - db
      - kafka
    command: sh -c "npm run start:dev"

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}"
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_PORT}
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_PORT}
      KAFKA_ADVENTISED_LISTENERS: PLAINTEXT://kafka:${KAFKA_PORT}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

volumes:
  postgres_data:
