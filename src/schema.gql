# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Branch {
  id: Int!
  branchName: String
  createdAt: String!
  updatedAt: String!
  lastModifiedTime: String
  AdviceType: [AdviceType!]
  StudentState: [StudentState!]
  ConsultationMemo: [ConsultationMemo!]
  PermissionsGranted: [PermissionsGranted!]
}

type ManageUser {
  id: Int!
  mUserId: String!
  mUsername: String!
  mPassword: String!
  mGrade: Int
  mRank: String
  mPhoneNum: String
  mPhoneNumCompany: String
  mPhoneNumInside: String
  mPhoneFriend: String
  mPart: [String!]
  mAvatar: String
  mJoiningDate: String
  mAddresses: String
  createdAt: String
  updatedAt: String
  resign: String
  email: String
  mZipCode: String
  mAddressDetail: String
  Branch: Branch
  branchId: Int
  lastModifiedTime: String
  PermissionsGranted: [PermissionsGranted!]
  StudentState: [StudentState!]
}

type StudentState {
  id: Int!
  campus: String
  category: String
  stName: String!
  phoneNum1: String!
  phoneNum2: String
  phoneNum3: String
  currentManager: ManageUser
  currentManagerInt: Int
  subject: [String!]
  detail: String
  agreement: String!
  progress: Int!
  stEmail: String
  stAddr: String
  subDiv: String
  stVisit: String
  expEnrollDate: String
  perchase: Boolean
  createdAt: String!
  updatedAt: String!
  receiptDiv: String
  pic: String
  classMethod: [String!]
  Branch: Branch
  branchId: Int
  lastModifiedTime: String
  adviceTypes: [AdviceType!]
}

type AdviceType {
  id: Int!
  type: String!
  indexNum: Int!
  category: String
  onOff: String
  defaultValue: String
  createdAt: String!
  updatedAt: String!
  studentStates: [StudentState!]
  lastModifiedTime: String
  Branch: Branch
  branchId: Int
  StudentState: [StudentState!]!
}

type ConsultationMemo {
  id: Int!
  content: String!
  createdAt: String!
  updatedAt: String!
  studentState: StudentState
  studentStateId: Int
  manageUser: ManageUser
  manageUserId: Int
  Branch: Branch
  branchId: Int
  lastModifiedTime: String
}

type PermissionsGranted {
  id: Int!
  permissionName: String!
  topic: String
  ManageUser: [ManageUser!]
  smsPermitted: String
  readOnly: String
  allPermitted: String
  createdAt: String!
  updatedAt: String!
  Branch: Branch
  branchId: Int
  lastModifiedTime: String
}

type CommonResponse {
  ok: Boolean!
  message: String
  error: String
}

type ResultLogin {
  ok: Boolean!
  message: String
  error: String
  token: String
  refreshToken: String
}

type ResultSeeManageUser {
  ok: Boolean!
  message: String
  error: String
  result: [ManageUser!]
  totalCount: Int
}

type SearchManageUserResult {
  ok: Boolean!
  error: String
  message: String
  result: [ManageUser!]
  totalCount: Int
}

type ResultRefreshToken {
  ok: Boolean!
  error: String
  newAccessToken: String
}

type ResultIsMe {
  ok: Boolean!
  message: String
  error: String
}

type ResultSearchPermissionsGranted {
  ok: Boolean!
  message: String
  error: String
  data: [PermissionsGranted!]
  totalCount: Int
}

type ResultAdviceType {
  ok: Boolean!
  message: String
  error: String
  adviceType: [AdviceType!]
  totalCount: Int
}

type Query {
  sayHello: String!
  searchManageUser(id: Int, mUserId: String, mUsername: String, mGrade: Int, mRank: String, mPhoneNum: String, mPart: String, resign: String, mJoiningDate: [String!], limit: Int, page: Int): SearchManageUserResult!
  seeManageUser(limit: Int, page: Int, resign: String): ResultSeeManageUser!
  mMe: ManageUser!
  isMme: ResultIsMe!
  searchPermissionsGranted(id: Int, permissionName: String, topic: String, manageUserId: Int): ResultSearchPermissionsGranted!
  seeAdviceType(limit: Int, page: Int, category: String): ResultAdviceType!
}

type Mutation {
  login(mUserId: String!, mPassword: String!): ResultLogin!
  createBranch(branchName: String!): CommonResponse!
  editBranch(id: Int!, newBranchName: String!): CommonResponse!
  deleteBranch(id: Int!): CommonResponse!
  createManageUser(mUserId: String!, mUsername: String!, mPassword: String!, mGrade: Int, mRank: String, mPart: [String!], mPhoneNum: String, mPhoneNumCompany: String, mPhoneNumFriend: String, mPhoneNumInside: String, mJoiningDate: String, mAddresses: String, email: String, mZipCode: String, mAddressDetail: String, branchId: Int): CommonResponse!
  createMasterUser(mUserId: String!, mUsername: String!, mPassword: String!, branchName: String!, mGrade: Int, mRank: String, mPart: [String!], mPhoneNum: String, mPhoneNumCompany: String, mPhoneNumFriend: String, mPhoneNumInside: String, mJoiningDate: String, mAddresses: String, email: String, mZipCode: String, mAddressDetail: String): CommonResponse!
  editManageUser(id: Int!, mUsername: String, mPassword: String, mGrade: Int, mRank: String, mPhoneNum: String, mPhoneNumCompany: String, mPhoneNumInside: String, mPhoneNumFriend: String, mPart: [String!], mJoiningDate: String, mAddresses: String, email: String, resign: String, mZipCode: String, mAddressDetail: String, lastModifiedTime: String, branchId: Int): CommonResponse!
  deleteManageUser(id: Int!): CommonResponse!
  refreshToken(refreshToken: String!): ResultRefreshToken!
  createStudentState(agreement: String!, subject: [String!]!, progress: Int!, stName: String, phoneNum1: String, campus: String, detail: String, category: String, phoneNum2: String, phoneNum3: String, stEmail: String, stAddr: String, stVisit: String, expEnrollDate: String, perchase: Boolean, birthday: String, receiptDiv: String, pic: String, classMethod: [String!], branchId: Int): CommonResponse!
  createPermissionGranted(permissionName: String!, topic: String!, manageUserIds: [Int!], smsPermitted: String, readOnly: String, allPermitted: String): CommonResponse!
  editPermissionsGranted(lastModifiedTime: String!, id: Int!, manageUserIdsToConnect: [Int!], manageUserIdsToDisconnect: [Int!], smsPermitted: String, readOnly: String, allPermitted: String, permissionName: String, topic: String): CommonResponse!
  deletePermissionsGranted(id: Int!): CommonResponse!
  editAdviceType(id: Int!, onOff: String, category: String, defaultValue: String): CommonResponse!
  createAdviceType(type: String!, indexNum: Int!, category: String!, onOff: String, defaultValue: String): CommonResponse!
  staticPushAT(id: Int!, onOff: String): CommonResponse!
  changeOrderAT(indexNums: [Int!]!, ids: [Int!]): CommonResponse!
}